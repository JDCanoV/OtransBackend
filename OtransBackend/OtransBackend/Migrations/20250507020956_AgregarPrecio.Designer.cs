// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtransBackend.Repositories.Models;

#nullable disable

namespace OtransBackend.Migrations
{
    [DbContext(typeof(OtransContext))]
    [Migration("20250507020956_AgregarPrecio")]
    partial class AgregarPrecio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OtransBackend.Repositories.Models.Auditoria", b =>
                {
                    b.Property<int>("IdAuditoria")
                        .HasColumnType("int");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<string>("Consulta")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.HasKey("IdAuditoria")
                        .HasName("PK__Auditori__7FD13FA0F93BAB2A");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Calificacion", b =>
                {
                    b.Property<int>("IdCalificacion")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<int>("Puntuaje")
                        .HasColumnType("int");

                    b.HasKey("IdCalificacion")
                        .HasName("PK__Califica__40E4A7516CF403F6");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Calificacion", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Carga", b =>
                {
                    b.Property<int>("IdCarga")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<string>("Imagen1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCarga")
                        .HasName("PK__Carga__6C9856177E87A551");

                    b.HasIndex("IdEstado");

                    b.ToTable("Carga", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.HasKey("IdEstado")
                        .HasName("PK__Estado__FBB0EDC17C858234");

                    b.ToTable("Estado", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Notificacion", b =>
                {
                    b.Property<int>("IdNotificacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.HasKey("IdNotificacion")
                        .HasName("PK__Notifica__F6CA0A85B4D735BE");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Notificacion", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("IdEmpresa");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int?>("IdTransportista")
                        .HasColumnType("int")
                        .HasColumnName("IdTransportista");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<double?>("Propina")
                        .HasColumnType("float");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("IdPago")
                        .HasName("PK__Pago__FC851A3AAF9094F3");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdTransportista");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__2A49584C97631D7D");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<string>("ArchiDocu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("IdRol");

                    b.Property<string>("Licencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NIT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<string>("NombreEmpresa")
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<int?>("NumCuenta")
                        .HasColumnType("int");

                    b.Property<int>("NumIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<string>("TelefonoSos")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF970F68F829");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "Correo" }, "UQ__Usuario__60695A191D2A9EE5")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Vehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<string>("CapacidadCarga")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<string>("Carroceria")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int?>("IdTransportista")
                        .HasColumnType("int")
                        .HasColumnName("IdTransportista");

                    b.Property<string>("LicenciaTransito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDueño")
                        .IsRequired()
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<int?>("NumIdentDueño")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Soat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SOAT");

                    b.Property<string>("Tecnicomecanica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelDueño")
                        .HasColumnType("int");

                    b.HasKey("IdVehiculo")
                        .HasName("PK__Vehiculo__7086121535148C26");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdTransportista");

                    b.HasIndex(new[] { "Placa" }, "UQ__Vehiculo__8310F99DE7F01474")
                        .IsUnique();

                    b.ToTable("Vehiculo", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Viaje", b =>
                {
                    b.Property<int>("IdViaje")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Distancia")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCarga")
                        .HasColumnType("int")
                        .HasColumnName("IdCarga");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("IdEmpresa");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int?>("IdTransportista")
                        .HasColumnType("int")
                        .HasColumnName("IdTransportista");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("TamanoVeh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCarroceria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdViaje")
                        .HasName("PK__Viaje__580AB6B9ED732581");

                    b.HasIndex("IdCarga");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdTransportista");

                    b.ToTable("Viaje", (string)null);
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Auditoria", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Auditoria")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Auditoria__IdUsu__3A81B327");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Calificacion", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Calificacions")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Calificac__IdEst__45F365D3");

                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Calificacions")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Calificac__IdUsu__46E78A0C");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Carga", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Cargas")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Carga__IdEstado__31EC6D26");

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Notificacion", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Notificacions")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Notificac__IdEst__3E52440B");

                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Notificacions")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Notificac__IdUsu__3D5E1FD2");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Pago", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdEmpresaNavigation")
                        .WithMany("PagoIdEmpresaNavigations")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK__Pago__IdEmpresa__4222D4EF");

                    b.HasOne("OtransBackend.Repositories.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Pago__IdEstado__4316F928");

                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdTransportistaNavigation")
                        .WithMany("PagoIdTransportistaNavigations")
                        .HasForeignKey("IdTransportista")
                        .HasConstraintName("FK__Pago__IdTranspor__412EB0B6");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdTransportistaNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Usuario", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Usuario__IdEstad__2A4B4B5E");

                    b.HasOne("OtransBackend.Repositories.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuario__IdRol__29572725");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Vehiculo", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Vehiculo__IdEsta__2F10007B");

                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdTransportistaNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdTransportista")
                        .HasConstraintName("FK__Vehiculo__IdTran__2E1BDC42");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdTransportistaNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Viaje", b =>
                {
                    b.HasOne("OtransBackend.Repositories.Models.Carga", "IdCargaNavigation")
                        .WithMany("Viajes")
                        .HasForeignKey("IdCarga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Viaje__IdCarga__35BCFE0A");

                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdEmpresaNavigation")
                        .WithMany("ViajeIdEmpresaNavigations")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK__Viaje__IdEmpresa__37A5467C");

                    b.HasOne("OtransBackend.Repositories.Models.Estado", "IdEstadoNavigation")
                        .WithMany("Viajes")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Viaje__IdEstado__34C8D9D1");

                    b.HasOne("OtransBackend.Repositories.Models.Usuario", "IdTransportistaNavigation")
                        .WithMany("ViajeIdTransportistaNavigations")
                        .HasForeignKey("IdTransportista")
                        .HasConstraintName("FK__Viaje__IdTranspo__36B12243");

                    b.Navigation("IdCargaNavigation");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdTransportistaNavigation");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Carga", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Estado", b =>
                {
                    b.Navigation("Calificacions");

                    b.Navigation("Cargas");

                    b.Navigation("Notificacions");

                    b.Navigation("Pagos");

                    b.Navigation("Usuarios");

                    b.Navigation("Vehiculos");

                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("OtransBackend.Repositories.Models.Usuario", b =>
                {
                    b.Navigation("Auditoria");

                    b.Navigation("Calificacions");

                    b.Navigation("Notificacions");

                    b.Navigation("PagoIdEmpresaNavigations");

                    b.Navigation("PagoIdTransportistaNavigations");

                    b.Navigation("Vehiculos");

                    b.Navigation("ViajeIdEmpresaNavigations");

                    b.Navigation("ViajeIdTransportistaNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
